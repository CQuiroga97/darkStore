version: "4.2"
services:
  products:
    container_name: products
    build:
      context: ./back/producs-microservice
      dockerfile: Dockerfile
      target: production
    ports:
      - "4000:3000"
    depends_on:
      - dark-store-db
      - flyway
    networks:
      - darkstore-network
  products-dev:
    container_name: products-dev
    restart: unless-stopped
    build:
      context: ./back/producs-microservice
      dockerfile: Dockerfile
      target: dev
    ports:
      - "4000:3000"
    depends_on:
      - dark-store-db
      - flyway
    volumes:
      - ./back/producs-microservice:/app
      - /app/node_modules
    networks:
      - darkstore-network
  brands:
    container_name: brands
    restart: unless-stopped
    build:
      context: ./back/brands-microservice
      dockerfile: Dockerfile
      target: production
    ports:
      - "4100:3000"
    depends_on:
      - dark-store-db
      - flyway
    networks:
      - darkstore-network
  brands-dev:
    container_name: brands-dev
    restart: unless-stopped
    build:
      context: ./back/brands-microservice
      dockerfile: Dockerfile
      target: dev
    ports:
      - "4100:3000"
    depends_on:
      - dark-store-db
      - flyway
    volumes:
      - ./back/brands-microservice:/app
      - /app/node_modules
    networks:
      - darkstore-network
  reports:
    container_name: reports
    restart: unless-stopped
    build:
      context: ./back/reports-microservice
      dockerfile: Dockerfile
      target: production
    ports:
      - "4300:3000"
    depends_on:
      - dark-store-db
      - flyway
    networks:
      - darkstore-network
  reports-dev:
    container_name: reports-dev
    restart: unless-stopped
    build:
      context: ./back/reports-microservice
      dockerfile: Dockerfile
      target: dev
    ports:
      - "4300:3000"
    depends_on:
      - dark-store-db
      - flyway
    volumes:
      - ./back/reports-microservice:/app
      - /app/node_modules
    networks:
      - darkstore-network
  income:
    container_name: income
    restart: unless-stopped
    build:
      context: ./back/income-microservice
      dockerfile: Dockerfile
      target: production
    ports:
      - "4400:3000"
    depends_on:
      - dark-store-db
      - flyway
    networks:
      - darkstore-network
  income-dev:
    container_name: income-dev
    restart: unless-stopped
    build:
      context: ./back/income-microservice
      dockerfile: Dockerfile
      target: dev
    ports:
      - "4400:3000"
    depends_on:
      - dark-store-db
      - flyway
    volumes:
      - ./back/income-microservice:/app
      - /app/node_modules
    networks:
      - darkstore-network
  front:
    container_name: front
    restart: unless-stopped
    build:
      context: ./front
      dockerfile: Dockerfile
      target: production
    ports:
      - "4600:3000"
    networks:
      - darkstore-network
  front-dev:
    container_name: front-dev
    restart: unless-stopped
    build:
      context: ./front
      dockerfile: Dockerfile
      target: dev
    ports:
      - "4600:3000"
    volumes:
      - ./front:/app
      - /app/node_modules
    networks:
      - darkstore-network
  dark-store-db:
    image: postgres:12
    environment:
      POSTGRES_USER: darkstore
      POSTGRES_PASSWORD: darkstore
      POSTGRES_DB: darkstore
    ports:
      - "5432:5432"
    volumes:
      - ./database/:/var/lib/postgresql/data
    networks:
      - darkstore-network

  flyway:
    image: flyway/flyway:latest
    volumes:
      - ./flyway/:/flyway/sql
    depends_on:
      - dark-store-db
    command: -url=jdbc:postgresql://dark-store-db:5432/darkstore -user=darkstore -password=darkstore -locations=filesystem:/flyway/sql -validateMigrationNaming=true migrate
    networks:
      - darkstore-network

networks:
  darkstore-network:
    driver: bridge
